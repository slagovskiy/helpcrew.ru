# Generated by Django 2.2.3 on 2019-07-17 09:23

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('dyntable', '0005_record'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='field',
            options={'ordering': ['name'], 'verbose_name': 'Table field', 'verbose_name_plural': 'Table fields'},
        ),
        migrations.AlterModelOptions(
            name='index',
            options={'ordering': ['table', 'num'], 'verbose_name': 'Row number', 'verbose_name_plural': 'Row numbers'},
        ),
        migrations.AlterModelOptions(
            name='record',
            options={'ordering': ['index', 'field'], 'verbose_name': 'Field value', 'verbose_name_plural': 'Fields values'},
        ),
        migrations.AlterModelOptions(
            name='table',
            options={'ordering': ['name'], 'verbose_name': 'Dynamic table', 'verbose_name_plural': 'Dynamic tables'},
        ),
        migrations.AlterField(
            model_name='field',
            name='deleted',
            field=models.BooleanField(default=False, verbose_name='Field is deleted'),
        ),
        migrations.AlterField(
            model_name='field',
            name='name',
            field=models.CharField(default='', max_length=50, verbose_name='Field name'),
        ),
        migrations.AlterField(
            model_name='field',
            name='order',
            field=models.IntegerField(default=10, verbose_name='Sort'),
        ),
        migrations.AlterField(
            model_name='field',
            name='table',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dyntable.Table', verbose_name='Table'),
        ),
        migrations.AlterField(
            model_name='field',
            name='type',
            field=models.IntegerField(choices=[(1, 'Number'), (2, 'String'), (3, 'Date'), (4, 'IP'), (5, 'Password')], default=2, verbose_name='Field type'),
        ),
        migrations.AlterField(
            model_name='field',
            name='uuid',
            field=models.SlugField(unique=True, verbose_name='Key'),
        ),
        migrations.AlterField(
            model_name='index',
            name='deleted',
            field=models.BooleanField(default=False, verbose_name='Row is deleted'),
        ),
        migrations.AlterField(
            model_name='index',
            name='num',
            field=models.IntegerField(default=0, verbose_name='Row number'),
        ),
        migrations.AlterField(
            model_name='index',
            name='table',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dyntable.Table', verbose_name='Table'),
        ),
        migrations.AlterField(
            model_name='record',
            name='field',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dyntable.Field', verbose_name='Field'),
        ),
        migrations.AlterField(
            model_name='record',
            name='index',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dyntable.Index', verbose_name='Row number'),
        ),
        migrations.AlterField(
            model_name='record',
            name='value',
            field=models.CharField(default='', max_length=255, verbose_name='Value'),
        ),
        migrations.AlterField(
            model_name='table',
            name='crew',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='helpdesk.Crew', verbose_name='Crew'),
        ),
        migrations.AlterField(
            model_name='table',
            name='deleted',
            field=models.BooleanField(default=False, verbose_name='Record is deleted'),
        ),
        migrations.AlterField(
            model_name='table',
            name='name',
            field=models.CharField(default='', max_length=200, verbose_name='Table name'),
        ),
        migrations.AlterField(
            model_name='table',
            name='uuid',
            field=models.SlugField(unique=True, verbose_name='Key'),
        ),
    ]
